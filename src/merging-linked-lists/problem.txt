Problem
--------
You have an array of N integers.
There are M contiguous segments that are sorted within the segment, but the whole array is not sorted.
N >> M.
How to produce a sorted version of this array?

OR

Problem can also be described as merging M sorted linked lists

Sample:
    input: [{1,3,5},{2,4,6,10,20,30},{11,12,23}]
    output: [1,2,3,4,5,6,10,11,12,20,23,30]

Solution 1 (brute force):
--------------------------
Once we have M linked lists it's just a matter of merging them
    - to merge M linked lists we loop through heir heads and find the min, add that to result array
    - remove the min head from that linked list
    - continue the above two steps until we have all n elements

Time complexity: O(M * N)
    - everytime we loop through M (upper bound) elements (linked list heads)
    - we do this N times

Overall time complexity: O(N * M)

Solution 2:
-----------
- Form a Min heap with the heads of linked lists (takes O(N))
- pop the head off the root element's linked list (takes constant time)
- then readjust the heap to maintain min heap (takes O(logM))
- we repeat last two steps N times

Overall time complexity: O(N * logM)
